@startuml
package manager {

    package service {
        class ServiceGroup
        class ServiceManager
        class ServiceInstance
        class ServiceStatus

        ServiceGroup *- ServiceManager
        ServiceManager *-- ServiceInstance
        ServiceManager *-- ServiceStatus
    }

    package resource {

    }

    package report {
      interface Broadcast {
        Broadcast()
      }
      class Broadcaster

      Broadcaster ..|> Broadcast
    }
}

package engine {
    class Overlord
}

package configuration {
  class Configuration
}

package cluster {
    class Cluster {
        name : string
        scheduler : scheduler.Scheduler
    }
}

package monitor {
    class ServiceUpdater {
        Register(ServiceUpdaterSubscriber)
        Remove(ServiceUpdaterSubscriber)
        Monitor()
    }
    interface ServiceUpdaterSubscriber {
        Id()
        Update(map[string]ServiceUpdaterData)
    }
    class ServiceUpdaterData
    interface ServiceChangeCriteria

    ServiceUpdater o- ServiceUpdaterSubscriber
    ServiceUpdater *-- ServiceUpdaterData
    ServiceUpdater o-- ServiceChangeCriteria
}

package collector {
}

package notification {
    interface Notification {
        Id() strng
        Notify(...)
    }

    class Email
    class Rundeck

    Notification <|.. Email
    Notification <|.. Rundeck
}

package api {
  class ApiEngine
}

package scheduler {
    interface Scheduler {
        Id() strng
        IsAlive(string) (bool, error)
        GetInstances() ([]ServiceInformation, error)
    }

    class ServiceInformation {
        Id : string
        Image : string
        Status : ServiceInformationStatus
    }

    class Swarm
    class Marathon
    class ServiceInformationStatus

    Scheduler <|.. Swarm
    Scheduler <|.. Marathon

    Swarm --> ServiceInformation
    Marathon --> ServiceInformation
    ServiceInformation -> ServiceInformationStatus
}

ApiEngine -> Overlord

ServiceManager ..|> ServiceUpdaterSubscriber
ServiceManager o- Broadcast

ServiceGroup -* Overlord

Overlord *- ServiceUpdater
Overlord *- Cluster
Overlord o- Configuration
Overlord *- Broadcaster

Broadcaster o- Notification

Cluster o- Scheduler
ServiceUpdater o-- Cluster
ServiceUpdaterData o-- ServiceInformation
@enduml
