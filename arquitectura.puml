@startuml
package manager {
    package service {
        class ServiceGroup
        class ServiceManager
        class ServiceInstance
        class ServiceStatus

        ServiceGroup *-- ServiceManager
        ServiceInstance --* ServiceManager
        ServiceStatus --* ServiceManager
    }

    package resource {

    }

    package report {
      interface Broadcast {
        Broadcast()
      }
      class Broadcaster
      class BroadcastStatus
      class BroadcastWorker

      Broadcast <|.. Broadcaster
      Broadcaster *-- BroadcastWorker
      BroadcastWorker *- BroadcastStatus
    }

    ServiceManager o- Broadcast
}

package configuration {
  class Configuration
}

package cluster {
    class Cluster {
        name : string
        scheduler : scheduler.Scheduler
    }
}

package monitor {
    class ServiceUpdater {
        Register(ServiceUpdaterSubscriber)
        Remove(ServiceUpdaterSubscriber)
        Monitor()
    }
    interface ServiceUpdaterSubscriber {
        Id()
        Update(map[string]ServiceUpdaterData)
    }
    class ServiceUpdaterData
    interface ServiceChangeCriteria {
      MeetCriteria(map[string]*ServiceUpdaterData)
    }
    class ImageNameAndImageTagRegexpCriteria
    class StatusCriteria
    class HealthyCriteria
    class AndCriteria
    class OrCriteria

    ServiceUpdater o- ServiceUpdaterSubscriber
    ServiceUpdater *-- ServiceUpdaterData
    ServiceUpdater o-- ServiceChangeCriteria
    ServiceChangeCriteria <|.. ImageNameAndImageTagRegexpCriteria
    ServiceChangeCriteria <|.. StatusCriteria
    ServiceChangeCriteria <|.. HealthyCriteria
    ServiceChangeCriteria <|.. AndCriteria
    ServiceChangeCriteria <|.. OrCriteria
}

package collector {
}

package notification {
    interface Notification {
        Id() strng
        Notify(...)
    }

    class Email
    class Rundeck

    Notification <|.. Email
    Notification <|.. Rundeck
}

package api {
  class appContext
}

package framework {
    interface Framework {
        Id() strng
    }

    class ServiceInformation {
        Id : string
        Image : string
        Status : ServiceInformationStatus
    }
}

ServiceManager .|> ServiceUpdaterSubscriber


ServiceManager -* appContext

appContext *- ServiceUpdater
appContext *- Cluster
appContext o- Configuration
appContext *- Broadcast

BroadcastWorker -> Notification : decora

Cluster o- Framework
ServiceUpdater o-- Cluster
ServiceUpdaterData o-- ServiceInformation
@enduml
