@startuml
package manager {
    class Overlord

    package service {
        class ServiceGroup
        class ServiceManager
        class ServiceInstance
    }
}

package cluster {
    class Cluster {
        name : string
        scheduler : scheduler.Scheduler
    }
}

package monitor {
    class ServiceUpdater {
        Register(ServiceUpdaterSubscriber)
        Remove(ServiceUpdaterSubscriber)
        notify()
    }
    interface ServiceUpdaterSubscriber {
        Id()
        Update(map[string]ServiceUpdaterData)
    }
    class ServiceUpdaterData
    interface ServiceChangeCriteria
}

package collector {
}

package notification {
}

package api {
  class ApiEngine
}

package scheduler {
    interface Scheduler {
        Id() strng
        IsAlive(string) (bool, error)
        GetInstances() ([]ServiceInformation, error)
    }

    class ServiceInformation {
        Id : string
        Image : string
        Status : ServiceInformationStatus
    }

    class Swarm
    class Marathon
    class ServiceInformationStatus
}


ApiEngine -> Overlord

ServiceGroup -* Overlord
ServiceGroup *- ServiceManager
ServiceManager *- ServiceInstance

ServiceManager ..|> ServiceUpdaterSubscriber

Overlord *- ServiceUpdater
Overlord *- Cluster

Swarm --> ServiceInformation
Marathon --> ServiceInformation
ServiceInformation -> ServiceInformationStatus

Scheduler <|.. Swarm
Scheduler <|.. Marathon

Cluster -> Scheduler
ServiceUpdater o-- Cluster

ServiceUpdater o- ServiceUpdaterSubscriber
ServiceUpdater *-- ServiceUpdaterData
ServiceUpdater o-- ServiceChangeCriteria
@enduml
